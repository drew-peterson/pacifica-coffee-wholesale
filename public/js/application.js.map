{"version":3,"sources":["MainCtrl.js","NavCtrl.js","PintrestCtrl.js","app.js","card.js","appRoutes.js","pinterestService.js","scrollEvent.js","scrollService.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"application.js","sourcesContent":["angular.module('MainCtrl', [])\n\n.controller('MainCtrl',function(\n  $scope,\n  scrollEvent,\n  $window\n  ){\n\n\n// direction images\n  $scope.directionImages = [\n    {img: '/../img/sign1.jpeg',\n    desc: 'Find the Sign'},\n    {img: '/../img/sign2.jpeg',\n    desc: 'Welcome'},\n   {img:'/../img/parking1.jpeg',\n    desc: 'Great Parking!'},\n   {img:'/../img/parking2.jpeg',\n    desc: 'Plently of open space'}\n  ]\n\n  // Scroll Event =============================\n\n   $scope.sEvent = {\n    home: {},\n    about: {},\n    consignment: {\n      col2: scrollEvent.getEl('#consignment .col-2'),\n      col4: scrollEvent.getEl('#consignment .col-4')\n    },\n    directions: {\n      imgs: scrollEvent.getEl('#directions .cardContainer')\n    }\n\n  } //sEvent\n\n  // Get scroll =================================\n  $scope.curPos = 0;\n\n  $window.onscroll = function(){\n    $scope.curPos = document.body.scrollTop\n                    || document.documentElement.scrollTop\n                    || 0;\n    // console.log(\"pos: \" + $scope.curPos);\n    $scope.$digest();\n\n  };\n  // =============================================\n\n\n// if statements can also work with $scope.watch() and the varible has to be changed in html\n//$scope.watch('varName',function(newVal, OldVal){if(x){$scope.varName = 'test'}})\n\n});","'use strict';\n\nangular.module('NavCtrl', [])\n\n.controller('NavCtrl', function(\n  $scope,\n  scrollService,\n  $location\n  ){\n\n  $scope.navC = '';\n\n  $scope.navLinks = [\n    {\n      state:'about',\n      navC: '#E91E63'\n    },\n      {\n      state: 'items',\n      navC: '#727272'\n    },\n    {\n      state: 'consignment',\n      navC: '#4CAF50'\n    },\n    {\n      state: 'directions',\n      navC: '#F8BBD0'\n    }\n  ];\n\n  // toggle class\n  $scope.mobileNav = function(event){\n    // master toggle...\n    $scope.navActive = !$scope.navActive;\n    // get btn class\n    var btn = event.srcElement.parentElement.className\n\n    // disable enable scrolling\n    if(!$scope.navActive || btn === 'home'){\n      // scrollService.enableScroll(); // need to get better\n    }else{\n      // scrollService.disableScroll(); // ned to get better\n    }\n    if(btn === 'home' && $scope.navActive){\n      $scope.navActive = !$scope.navActive;\n    }\n  } // end of mobile nav\n\n\n  $scope.changeBackground = function(color){\n\n    if(!$scope.navC){\n      $scope.navC = '#E91E63' // clicked from home page or any page\n    }else{\n      $scope.navC = color || $scope.navC\n    }\n  }\n\n\n  // check background @url and set color\n\n  var currentUrl = $location.$$path;\n\n  if(currentUrl === '/about'){\n    $scope.navC = '#E91E63';\n\n  }else if(currentUrl === '/consignment'){\n    $scope.navC = '#4CAF50';\n\n  }else if(currentUrl === '/directions'){\n    $scope.navC = '#F8BBD0'\n  }\n}) // end of ctrl ===================\n\n\n\n// custom directive ======================\n\n// directive is not really needed but i wanted practice\n.directive('mainNav', function(scrollService){\n  // this functions like jquery you do not call this it just runs\n  var openNav = function(scope, element, attrs){\n    // jquery only works inside\n    var btn = $('.nav-open');\n    var dh = $('.dNav');\n\n    // you could do btn clicks and stuch here....\n\n  }; // end of link\n\n  return {\n    restrict: 'E',\n    templateUrl: 'views/navigation/index.html',\n    link: openNav\n  };\n});","'use strict';\n\nangular.module('Pinterest', [])\n\n.controller('PinterestCtrl',function($http, $scope, pinterestService, $window){\n\n  // get all pins only once\n  pinterestService.getBoard(function(pins){\n    $scope.pins = pins;\n  })\n\n  // use pinterest url to redirect to pinterest page\n  $scope.gotoPins = function(location){\n    $window.open(location)\n  }\n\n})\n","'use strict';\n\nangular.module('fasionistaApp',\n  [\n  'ngAnimate',\n  'NavCtrl',\n  'MainCtrl',\n  'ui.router',\n  'appRoutes',\n  'Pinterest', // pinerest ctrl, inject module not ctrl,\n\n  ])\n\n// RUN METHOD called after .config =============\n\n.run(function($rootScope){\n  // auto scroll will keep page position, this will scroll to top of page on state change...\n  $rootScope.$on('$stateChangeSuccess', function() {\n   document.body.scrollTop = document.documentElement.scrollTop = 0;\n});\n\n})\n\n\n//========================================\n\n\n// Capitialize =========================\n.filter('capitalize', function() {\n    return function(input, all) {\n      var reg = (all) ? /([^\\W_]+[^\\s-]*) */g : /([^\\W_]+[^\\s-]*)/;\n      return (!!input) ? input.replace(reg, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();}) : '';\n    }\n  });\n\n// ========================================\n","'use strict';\n\nangular.module('fasionistaApp')\n\n  // card\n  .directive('cardInner',function(){\n    return{\n      controllerAs: 'cardCtrl',\n      templateUrl: '/views/partials/_card.html',\n\n      controller: function(){\n        this.fullName = \"Drew Peterson\";\n\n\n\n        this.test = [1,2,3]\n\n    } // end of controller\n  } // end of return\n}) // end of directive\n","angular.module('appRoutes', [])\n\n.config(function($stateProvider, $urlRouterProvider) {\n\n  $urlRouterProvider.otherwise('/');\n\n  $stateProvider\n    .state('index', {\n      url: '/',\n      controller: 'MainCtrl',\n      templateUrl: '../views/home/index.html',\n\n    })\n    .state('about', {\n      url: '/about',\n      controller: 'MainCtrl',\n      templateUrl: \"../views/about/index.html\",\n\n    })\n    .state('consignment', {\n      url: '/consignment',\n      controller: 'MainCtrl',\n      templateUrl: \"../views/consignment/index.html\",\n    })\n    .state('directions', {\n      url: '/directions',\n      controller: 'MainCtrl',\n      templateUrl: \"../views/directions/index.html\",\n    })\n    .state('items', {\n      url: '/items',\n      controller: 'PinterestCtrl',\n      templateUrl: '../views/items/index.html'\n    })\n    .state('test', {\n      url: '/test',\n      controller: 'MainCtrl',\n      templateUrl: '../views/test/index.html'\n    })\n\n  })\n","'use strict';\n\nangular.module('Pinterest')\n\n.factory('pinterestService', function($http){\n\n// 543176473746760468 //- old board\n  var boardUrl = 'https://api.pinterest.com/v1/boards/419538590226392216/pins/?access_token=ATqC1gzDTvxL0zf-1wfyp-SdFCe3FCx7yHOmO5hC0EfPzMArmQAAAAA&fields=id%2Clink%2Cnote%2Curl%2Cimage';\n\n  var pins = [];\n\nreturn {\n    getBoard: function(callback){\n      // callback is the anonymouse function from ctrl\n      var cb = callback || angular.noop;\n\n      if(pins.length !== 0){\n        cb(pins); // service does not reset so pins contain api data\n      }else{\n        $http.get(boardUrl)\n        .success(function(response){\n           pins = pins.concat(response.data);\n          cb(pins); // calling the cb function and passing in data\n        })\n        .error(function(){\n          cb();\n        })\n      }\n    }\n  }\n}) // end of factory =========================\n\n\n// how to return promise from promise;\n// http://stackoverflow.com/questions/12505760/processing-http-response-in-service\n\n// updated verion... prevent multiple api calls\n// http://stackoverflow.com/questions/31556184/calling-http-only-once-in-a-controller\n","'use strict';\n\nangular.module('fasionistaApp')\n\n.factory('scrollEvent', function(){\n\n  return {\n    getEl: function(className){\n      var el = $(className);\n\n      if (el.length >= 1) {\n        return el.offset().top -= 500;\n      }\n    }\n\n  } // end of return\n})","'use strict';\n\nangular.module('fasionistaApp')\n\n.factory('scrollService',function(){\n  return {\n     disableScroll: function(){\n      $('html, body').css(\n        {\n        'overflow': 'hidden',\n        'height': '100%'\n      });\n    },\n    enableScroll: function(){\n      $('html, body').css(\n        {\n       'overflow': 'auto',\n       'height': 'auto'\n       });\n    }\n  }\n})"],"sourceRoot":"/source/"}